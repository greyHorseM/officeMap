{"version":3,"sources":["webpack:///webpack/bootstrap 9cc70b68c5bd75defa73","webpack:///./app/map.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AChEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,kDAAkD,eAAe;;AAEjE,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA,4DAA4D,YAAY;AACxE,KAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,aAAa,uBAAuB;AACpC,aAAa,mBAAmB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,SAAS,gDAAgD;AACzD,SAAS,gDAAgD;AACzD,SAAS,mDAAmD;AAC5D,SAAS;AACT;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,kCAAkC;AACpE;AACA,iCAAiC;AACjC,kBAAkB;AAClB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC,KAAK;AACL;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;;AAEjC;AACA;AACA;AACA;AACA;AACA,iCAAiC;;;;AAIjC;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;AAIA;AACA,wBAAwB;;AAExB;AACA;AACA;AACA;AACA,MAAM;;;;AAIN;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA,KAAK;;;;AAIL;AACA,CAAC;;AAED;AACA;AACA;AACA,KAAK;AACL,CAAC;;AAED,cAAc","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 9cc70b68c5bd75defa73","//отвязать события от рабочих мест, привязать события выбора комнаты только к комнате\r\n//масштабирование карты, разедлить области на карту и на список сотрудников\r\n\r\nfunction createMap() {\r\n    var s = Snap('#svg');\r\n\r\n    getRooms().then(function (rooms) {\r\n        rooms = rooms.map(createFigure(s));\r\n        var g = s.group(...rooms);\r\n        var [room1, room2, room3] = rooms;\r\n\r\n        g.drag();\r\n\r\n        var svg = document.getElementById('svg');\r\n        svg.addEventListener('wheel', function(e){scaleMin(g, e)});;\r\n\r\n        rooms = {room1, room2, room3};\r\n\r\n        document.getElementById('svg').addEventListener('click', function(e){\r\n            var idRoom = e.target.id;\r\n            if(idRoom.indexOf(\"room\") != -1){\r\n                selectRoom(rooms, idRoom);\r\n            }\r\n        });\r\n\r\n        var buttonCreateWorkplace = document.getElementById('create-workplace');\r\n        buttonCreateWorkplace.addEventListener('click', function(e){\r\n              createWorkplace(rooms, s);\r\n          }\r\n        );\r\n\r\n        var buttonScaleMin = document.getElementById('scale-min');\r\n        buttonScaleMin.addEventListener('click', function(){scaleMin(g)});\r\n    });\r\n}\r\n\r\ncreateMap();\r\n\r\nfunction getRooms() {\r\n    return fetch('/rooms').then(data => data.json(), function(){\r\n        console.log(\"Данные c сервера получить не удалось\");\r\n    });\r\n}\r\n\r\nfunction createFigure(canvas){\r\n    return ({id, workPlaces, coords}) => {\r\n        var {leftTop, rightDown} = coords;\r\n        return canvas.rect(leftTop.x, leftTop.y, rightDown.x, rightDown.y).attr({\r\n            stroke: '#123456',\r\n            strokeWidth: 5,\r\n            fill: '#b1c9ed',\r\n            id,\r\n            check: false,\r\n            workPlaces\r\n        });\r\n    };\r\n}\r\n\r\nfunction createEmployeesList(){\r\n    let employees = [\r\n        {name: \"Чук\", room: room1, workplace: workplace1},\r\n        {name: \"Гек\", room: room1, workplace: workplace2},\r\n        {name: \"Петька\", room: room2, workplace: workplace1},\r\n        {name: \"Иван Иванович\", room: room2, workplace: workplace2}\r\n        ];\r\n\r\n}\r\n\r\n//Выбрать комнату\r\n/**\r\n *\r\n * @param {object} roomsArray\r\n * @param {string} idRoom\r\n */\r\nfunction selectRoom(roomsArray, idRoom){\r\n    var buttonCreateWorkplace = document.getElementById('create-workplace');\r\n    buttonCreateWorkplace.disabled = false;\r\n     if(roomsArray[idRoom].attr('check') == 'false'){\r\n        for (var key in roomsArray){\r\n            roomsArray[key].attr({'fill': '#b1c9ed', 'check': false});\r\n        }\r\n        roomsArray[idRoom].attr({'fill': '#b1edc9',\r\n    'check': true});\r\n    }\r\n\r\n    console.log(idRoom);\r\n    console.log(roomsArray[idRoom].attr('fill'));\r\n    console.log(roomsArray[idRoom].attr('check'));\r\n}\r\n\r\n//Создать рабочее место в комнате\r\n/**\r\n *\r\n * @param {object} roomsArray\r\n * @param {object} svgObject\r\n */\r\n\r\nfunction createWorkplace(roomsArray, svgObject){\r\n    for (var key in roomsArray){\r\n\r\n        if (roomsArray[key].attr('check') == 'true'){\r\n            var xpos = roomsArray[key].attr('x');\r\n            var ypos = roomsArray[key].attr('y');\r\n            console.log('x:' + xpos + ', ' + 'y:' + ypos);\r\n\r\n\r\n            //создание рабочего места и добавление в объект\r\n            var countRoom = roomsArray[key].attr('workPlaces').length;\r\n            var newWorkPlace = svgObject.rect(xpos, ypos, 50, 50).attr({\r\n                stroke: '#123456',\r\n                fill: '#123456',\r\n                id: 'workplace1'\r\n            });\r\n\r\n            //roomsArray[key].attr('workPlaces').append(newWorkPlace);\r\n            console.log(countRoom);\r\n            newWorkPlace.drag();\r\n            newWorkPlace.drag(function (x, y) {\r\n                let pos = x+51;\r\n                console.log(\"I am \"+pos);\r\n                if(pos > 400){\r\n                    newWorkPlace.undrag();\r\n                }\r\n\r\n            });\r\n            var domWorkPlace = document.getElementById('workplace1');\r\n            domWorkPlace.addEventListener('click', function(){\r\n                console.log('тут нужны координаты');\r\n            })\r\n        }\r\n    }\r\n\r\n}\r\n\r\n//масштабирование карты\r\nfunction scaleMap() {\r\n    var svg = document.getElementById('svg');\r\n    svg.addEventListener('wheel', function(){\r\n        svg.setAttribute('viewBox', \"0 0 800 800\");\r\n    })\r\n}\r\n\r\nfunction scaleMin(g, e){\r\n    //e.stopPropagation();\r\n    //event.stopPropagation ? event.stopPropagation() : (event.cancelBubble=true);\r\n    var myMatrix = new Snap.Matrix();\r\n    if (e.deltaY < 0){\r\n        myMatrix.scale(1.5,1.5);\r\n        g.animate({transform: myMatrix},300);\r\n    } else{\r\n        myMatrix.scale(0.5,0.5);\r\n        g.animate({transform: myMatrix},300);\r\n    }\r\n    e.preventDefault();\r\n}\r\n\r\n/*function toCenterRoom(svg, rooms, e){\r\n    console.log(\"I am func toCenterRoom\");\r\n    var svgBounding = svg.getBBox();\r\n    var mapBounding = rooms.getBBox();\r\n    var targetBounding = e.target.getBBox();\r\n    var transformOriginX = targetBounding.x + targetBounding.width / 2;\r\n    var transformOriginY = targetBounding.y + targetBounding.height / 2;\r\n    svg.style.transformOrigin = (transformOriginX) + \"px \" + (transformOriginY) + \"px\";\r\n}\r\n*/\r\n\r\n\r\n/*function createMap(){\r\n    var s = Snap('#svg');\r\n    var room1 = s.rect(0,0,100,100).\r\n                attr({\r\n                    stroke: '#123456',\r\n                    strokeWidth: 5,\r\n                    fill: 'blue',\r\n                    opacity: 0.2});\r\n\r\n    var room2 = s.rect(105,0,100,100).\r\n                attr({\r\n                    stroke: '#123456',\r\n                    strokeWidth: 5,\r\n                    fill: 'blue',\r\n                    opacity: 0.2});\r\n\r\n\r\n\r\n    var titleR1 = Snap.parse('<title>Комната 1</title>');\r\n    room1.append(titleR1);\r\n\r\n    var titleR2 = Snap.parse('<title>Комната 2</title>');\r\n    room2.append(titleR2);\r\n\r\n\r\n    //\r\n    var move = function(dx,dy) {\r\n        this.attr({\r\n            transform: this.data('origTransform') + (this.data('origTransform') ? \"T\" : \"t\") + [dx, dy]\r\n        });\r\n        var coord = '' + dx + dy;\r\n        console.log(coord);\r\n\r\n    }\r\n\r\n    var start = function() {\r\n        this.data('origTransform', this.transform().local );\r\n    }\r\n    var stop = function() {\r\n        console.log('finished dragging');\r\n    }\r\n\r\n    room1.drag(move, start, stop );\r\n    room2.drag(move, start, stop );\r\n    //\r\n\r\n\r\n\r\n   /* var component = document.querySelector('#svg');\r\n    component.append(s);*/\r\n\r\n   //nextStep ассоциировать квадраты с элементом списка\r\n/*    var arrayRoom = {\r\n     'employee1': room1,\r\n     'employee2': room2\r\n    };*/\r\n\r\n\r\n\r\n/*    document.getElementById(\"employees\").addEventListener(\"click\", function(e){\r\n        if (e.target && e.target.nodeName == \"LI\"){\r\n            console.log(\"List item \", e.target.id.replace(\"post-\", \"\"), \" was clicked!\");\r\n            //var room = arrayRoom[e.target.id];\r\n\r\n            arrayRoom[e.target.id].attr('fill', 'green');\r\n            //room.attr('fill', 'green');\r\n\r\n\r\n        }\r\n    });\r\n\r\n\r\n\r\n    alert(1);\r\n}*/\r\n\r\n/*function seeRoom(room1){\r\n    room1.click(function() {\r\n        this.attr('fill', 'green')\r\n    });\r\n}*/\r\n\r\n/*createMap();*/\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/map.js\n// module id = 0\n// module chunks = 0"],"sourceRoot":""}